---
import Layout from "../layouts/Layout.astro";
import InfoSection from "@/components/info-section";
import UserWelcome from "@/components/home/userWelcome"; // Import the hydrated component
import {
  Calendar,
  
  Inbox,
  Menu,
  BookOpen,
  NotebookPen,
  Sprout,
  Phone,
  Link,
  Users,
  LogOut,
  Laptop2,
  SquareUser,
} from "lucide-react";


// Interface for news items
interface NewsItem {
  student_news_id: number;
  title: string;
  news_category_name: string;
  news_contents: string;
  author_name: string;
  is_public: boolean;
  high_priority: boolean;
  publish_at: string;
  created_at: string;
  updated_at: string;
  read_at: string;
  is_read: boolean;
}

// Fetch student news for sneak peek (server-side)
const fetchStudentNewsDatas = async (): Promise<NewsItem[]> => {
  try {
    const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/student-news`);
    if (!response.ok) throw new Error("Failed to fetch student news.");
    const data = await response.json();
    return data;
  } catch (error) {
    console.error("Error fetching student news:", error);
    return [];
  }
};

const item = await fetchStudentNewsDatas();

// Limit to 5 news items
const limitedNews = item.slice(0, 5);

// Grid button data
const buttons = [
    {
      title: "お知らせ",
      url: "/",
      icon: Inbox,
    },
    {
      title: "学校行事",
      url: "/school_events",
      icon: Calendar,
    },
    {
      title: "出席状態 確認",
      url: "/attendance",
      icon: Laptop2,
    },
    {
      title: "欠席届",
      url: "/absent_forms",
      icon: BookOpen,
    },
    {
      title: "HANDBOOK",
      url: "/handbook",
      icon: NotebookPen,
    },
    {
      title: "リンク集",
      url: "/listpage",
      icon: Link,
    },
];
---

<Layout title="ホーム">
  <main
    class="mt-12 md:container mx-auto lg:mt-8 px-6 sm:px-16 xl:px-20 min-h-screen"
  >
    <!-- Welcome Section -->
    <UserWelcome client:only="react" /> <!-- Use the hydrated component here -->

    <!-- Recent News Sneak Peek -->
    <section class="mt-4">
      <h2 class="text-lg font-bold">
        <a href="/">最近のニュース</a>
      </h2>
      <InfoSection client:load initialItems={limitedNews} />
      <div class="bg-white text-center p-1">
        <a
          href="/"
          class="px-5 py-2 bg-gradient-to-r from-blue-400 to-blue-500 text-white font-bold rounded-md hover:from-blue-500 hover:to-blue-600 transition duration-200"
        >
          もっと見る
        </a>
      </div>
      <br>
    </section>

    <!-- Buttons Section -->
    <div class="space-y-4">
      <!-- Absence Notification Button -->
      <div class="bg-white text-center p-4">
        <a
          href="/absent_forms"
          class="px-6 py-2 bg-gradient-to-r from-blue-400 to-blue-500 text-white font-bold rounded-full hover:from-blue-500 hover:to-blue-600 transition duration-200"
        >
          欠席・遅刻・公欠の連絡
        </a>
      </div>

      <!-- Student Survey Button -->
      <div class="bg-white text-center">
        <a
          href="https://enq.ecc-sv.com/student/"
          target="_blank"
          class="px-6 py-2 bg-gradient-to-r from-blue-400 to-blue-500 text-white font-bold rounded-full hover:from-blue-500 hover:to-blue-600 transition duration-200"
        >
          学生アンケートへ
        </a>
      </div>
    </div>

    <!-- 3x3 Grid Buttons -->
    <section class="mt-8">
      <div
        class="grid grid-cols-2 sm:grid-cols-3 gap-4 p-4 bg-sky-100 rounded-md shadow-md"
      >
        {
          buttons.map((button) => (
            <a
              href={button.url}
              class="flex flex-col items-center justify-center gap-2 p-6 bg-sky-200 hover:bg-sky-300 rounded-md shadow-md transition duration-200"
            >
              <button.icon className="w-10 h-10 text-sky-900" />
              <span class="text-lg font-bold text-sky-900 text-center">
                {button.title}
              </span>
            </a>
          ))
        }
      </div>
    </section>

   